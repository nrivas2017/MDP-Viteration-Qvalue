import pygame
from pygame.locals import *
import time,random

#---------------------------------------------------------------------
# VAR
#---------------------------------------------------------------------
nSIZE_Pos = 64
nPiso = 0
nObstaculo = 1
Ld = 0.98
lGo = lp = lr =False
nX_M = nY_M = 21
t_inicio = 0


#---------------------------------------------------------------------
# ARRAY MAPA NAVEGACION 
#---------------------------------------------------------------------
aINICIO = [0,5]
aMETA   = [3,0]
aPos_R = [aINICIO[0],aINICIO[1]]     # Posicion Global (x,y) Robot en MAPA
aMAPA =  [
          [0,0,1,0],
          [0,0,0,0],
          [0,0,1,0],
          [1,0,0,0],
          [0,0,0,0],
          [0,0,0,0]
         ]       

aSTATE = [
          [0,1,2,3],
          [4,5,6,7],
          [8,9,10,11],
          [12,13,14,15],
          [16,17,18,19],
          [20,21,22,23]
         ]  
#---------------------------------------------------------------------
# ARRAY MDP 
#---------------------------------------------------------------------

# Prob Trans. Accion 1 = (Robot Navega: Norte)
P1  =  [ #0    1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16   17   18   19   20    21  22   23
       [0.90,0.05,0.00,0.00,0.05,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.05,0.90,0.05,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.90,0.05,0.00,0.00,0.05,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.05,0.90,0.00,0.00,0.00,0.05,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.90,0.00,0.00,0.00,0.05,0.05,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.90,0.00,0.00,0.00,0.05,0.05,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.90,0.00,0.00,0.00,0.05,0.05,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.90,0.00,0.00,0.05,0.05,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.90,0.00,0.00,0.00,0.05,0.05,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.90,0.00,0.00,0.00,0.05,0.05,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.90,0.00,0.00,0.00,0.05,0.05,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.90,0.00,0.00,0.05,0.05,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.90,0.00,0.00,0.00,0.00,0.05,0.00,0.00,0.05,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.90,0.00,0.00,0.00,0.05,0.05,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.90,0.00,0.00,0.00,0.05,0.05,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.90,0.00,0.00,0.05,0.05,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.90,0.00,0.00,0.00,0.05,0.05,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.90,0.00,0.00,0.00,0.05,0.05,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.90,0.00,0.00,0.00,0.05,0.05,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.90,0.00,0.00,0.05,0.05,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.90,0.00,0.00,0.00,0.05,0.05,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.90,0.00,0.00,0.00,0.05,0.05,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.90,0.00,0.00,0.00,0.05,0.05],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.90,0.00,0.00,0.05,0.05]
       ]

# Prob Trans. Accion 2 = (Robot Navega: Sur)
P2  =  [ #0    1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16   17   18   19   20    21  22   23
       [0.05,0.05,0.00,0.00,0.90,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.05,0.05,0.00,0.00,0.90,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.05,0.05,0.00,0.00,0.90,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.05,0.05,0.00,0.00,0.00,0.90,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.05,0.05,0.00,0.00,0.90,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.05,0.05,0.00,0.00,0.90,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.05,0.05,0.00,0.00,0.90,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.05,0.00,0.00,0.00,0.05,0.00,0.00,0.00,0.90,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.05,0.05,0.00,0.00,0.90,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.05,0.00,0.00,0.00,0.05,0.00,0.00,0.00,0.90,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.05,0.00,0.00,0.00,0.00,0.05,0.00,0.00,0.90,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.05,0.00,0.00,0.00,0.05,0.00,0.00,0.00,0.90,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.05,0.05,0.00,0.00,0.90,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.05,0.05,0.00,0.00,0.90,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.05,0.05,0.00,0.00,0.90,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.05,0.00,0.00,0.00,0.05,0.00,0.00,0.00,0.90,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.05,0.05,0.00,0.00,0.90,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.05,0.05,0.00,0.00,0.90,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.05,0.00,0.00,0.00,0.05,0.00,0.00,0.00,0.90,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.05,0.00,0.00,0.00,0.05,0.00,0.00,0.00,0.90],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.05,0.00,0.00,0.00,0.90,0.05,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.05,0.00,0.00,0.00,0.90,0.05,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.05,0.00,0.00,0.00,0.90,0.05],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.05,0.00,0.00,0.05,0.90]
       ]

# Prob Trans. Accion 3 = (Robot Navega: Este)
P3  =  [ #0    1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16   17   18   19   20    21  22   23
       [0.05,0.90,0.00,0.00,0.05,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.05,0.90,0.00,0.00,0.05,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.05,0.90,0.00,0.00,0.05,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.05,0.90,0.00,0.00,0.00,0.05,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.05,0.90,0.00,0.00,0.05,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.05,0.00,0.00,0.00,0.05,0.90,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.05,0.00,0.00,0.00,0.05,0.90,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.05,0.00,0.00,0.05,0.90,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.05,0.00,0.00,0.00,0.00,0.90,0.00,0.00,0.05,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.05,0.00,0.00,0.00,0.05,0.90,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.05,0.00,0.00,0.00,0.05,0.90,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.05,0.00,0.00,0.00,0.90,0.00,0.00,0.00,0.05,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.05,0.00,0.00,0.00,0.05,0.90,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.05,0.00,0.00,0.00,0.05,0.90,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.05,0.00,0.00,0.00,0.05,0.90,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.05,0.00,0.00,0.05,0.90,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.05,0.00,0.00,0.00,0.05,0.90,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.05,0.00,0.00,0.00,0.05,0.90,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.05,0.00,0.00,0.00,0.05,0.90,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.05,0.00,0.00,0.05,0.90,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.05,0.00,0.00,0.05,0.90,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.05,0.00,0.00,0.00,0.05,0.90,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.05,0.00,0.00,0.00,0.05,0.90],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.05,0.00,0.00,0.05,0.90]
       ]

# Prob Trans. Accion 1 = (Robot Navega: Oeste)
P4  =  [ #0    1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16   17   18   19   20    21  22   23
       [0.90,0.05,0.00,0.00,0.05,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.90,0.05,0.00,0.00,0.00,0.05,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.90,0.05,0.05,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.90,0.05,0.00,0.00,0.00,0.05,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.90,0.05,0.00,0.00,0.05,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.90,0.05,0.05,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.90,0.05,0.05,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.05,0.00,0.00,0.90,0.05,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.05,0.00,0.00,0.00,0.90,0.05,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.05,0.00,0.00,0.90,0.05,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.05,0.00,0.00,0.90,0.05,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.05,0.00,0.00,0.90,0.05,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.05,0.00,0.00,0.00,0.90,0.05,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.05,0.00,0.00,0.90,0.05,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.05,0.00,0.00,0.90,0.05,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.05,0.00,0.00,0.90,0.05,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.05,0.00,0.00,0.00,0.90,0.05,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.05,0.00,0.00,0.90,0.05,0.00,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.05,0.00,0.00,0.90,0.05,0.00,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.05,0.00,0.00,0.90,0.05,0.00,0.00,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.05,0.00,0.00,0.00,0.90,0.05,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.05,0.00,0.00,0.90,0.05,0.00,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.05,0.00,0.00,0.90,0.05,0.00],
       [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.05,0.00,0.00,0.90,0.05]
       ]

#        0    1     2    3   4    5    6    7    8    9    10    11   12   13   14   15   16   17   18   19   20   21   22   23
Rw   = [0.1, 0.1, -10, 10, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, -10, 0.1, -10, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1] # Reward del Estado (i) = {S0 - S20} = 24 Estados

#Datos del modelo
nS = 24 #Numero de Estados
nA = 4 #Numero de Acciones
nU = 0.0001 #Cota de Error
aA = ['N','S','E','O'] #Acciones
aQ = [ [0.0,0.0,0.0,0.0] ] * nS #Q(s,a) Value 24x4 -> 24Filas x 4Columnas
aP = [0]*nS #Politica 1x24 -> 1Fila x 24 columnas
aT = [] #Distr Probab
aE = [ [0]*nS ] #Value Function


#Load Distr. Prob. dada la accion
aT.append(P1) ; aT.append(P2)
aT.append(P3) ; aT.append(P4)


#Norma Span.-
#------------------------------------------------------
def lNorma_SP(aA,aB,nERROR):
    return (max([abs(aA[i] - aB[i]) for i in range(nS) ]) > nERROR)
#------------------------------------------------------


def qValue():
    nK = 1
    while 1:
        aE.append([0]*nS)
        for s in range(nS):
            for a in range(nA):
                aQ[s][a] = Rw[s] + Ld*sum([aT[a][s][i]*aE[nK-1][i] for i in range(nS)])
            aE[nK][s] = max(aQ[s])
            aP[s] = aQ[s].index(aE[nK][s])
        if not lNorma_SP(aE[nK][:], aE[nK-1][:], nU): break
        nK += 1 
    for i in range(nS):
        aP[i] = aA[aP[i]]



# PINTA Nodos Inicio y Meta 
#---------------------------------------------------------------------
def Pinta_INI_META():
    scr.blit(img3,(aMETA[0]*nSIZE_Pos  ,aMETA[1]*nSIZE_Pos  ))
    return

#---------------------------------------------------------------------
# Carga imagenes y convierte formato pygame
#---------------------------------------------------------------------
def Load_Image(sFile,transp=False):
    image = pygame.image.load(sFile)
    image = image.convert()
    if transp:
       color = image.get_at((0,0))
       image.set_colorkey(color,RLEACCEL)
    return image

#---------------------------------------------------------------------
# Pinta MAPA segun aMAPA
#---------------------------------------------------------------------
def Pinta_aMAPA():
    nPos_X = 0 
    nPos_Y = 0
    for nF in range(0,6):
        for nC in range(0,4):
            if aMAPA[nF][nC] == nPiso: #0
                scr.blit(img1,(nPos_X,nPos_Y))
                nPos_X += 64
            if aMAPA[nF][nC] == nObstaculo:
                scr.blit(img2,(nPos_X,nPos_Y))
                nPos_X += 64
        nPos_X = 0
        nPos_Y += 64 
    return

#---------------------------------------------------------------------
# Pinta Politica
#---------------------------------------------------------------------
def Pinta_Poli():
    if lp:
        for nF in range(0,6):
            for nC in range(0,4):
                if aSTATE[nF][nC] != aSTATE[aMETA[1]][aMETA[0]]:
                    if aP[aSTATE[nF][nC]] == 'N':
                        scr.blit(img5,(nC*nSIZE_Pos,nF*nSIZE_Pos))
                    if aP[aSTATE[nF][nC]] == 'S':
                        scr.blit(img6,(nC*nSIZE_Pos,nF*nSIZE_Pos))
                    if aP[aSTATE[nF][nC]] == 'E':
                        scr.blit(img7,(nC*nSIZE_Pos,nF*nSIZE_Pos))
                    if aP[aSTATE[nF][nC]] == 'O':
                        scr.blit(img8,(nC*nSIZE_Pos,nF*nSIZE_Pos))
    return


#---------------------------------------------------------------------
# Pinta Robot 
#---------------------------------------------------------------------

def Pinta_Robot(lr,aPos_R,aP):
    global t_inicio
    global x
    if time.time()-t_inicio >= 1 and time.time()-t_inicio <=2:
        aEstado_actual = aSTATE[aPos_R[1]][aPos_R[0]]
        if aP[aEstado_actual] == "N":
            aux = []
            for i in range(nS):
                if P1[aEstado_actual][i] != 0.0:
                    for j in range(int(P1[aEstado_actual][i]*100)): aux.append(i)
            nuevo_estado = random.choice(aux)
            for i in range(len(aSTATE)):
                if nuevo_estado in aSTATE[i]:
                    aPos_R[0] = int(aSTATE[i].index(nuevo_estado))
                    aPos_R[1] = i
        if aP[aEstado_actual] == "S":
            aux = []
            for i in range(nS):
                if P2[aEstado_actual][i] != 0.0:
                    for j in range(int(P2[aEstado_actual][i]*100)): aux.append(i)
            nuevo_estado = random.choice(aux)
            for i in range(len(aSTATE)):
                if nuevo_estado in aSTATE[i]:
                    aPos_R[0] = int(aSTATE[i].index(nuevo_estado))
                    aPos_R[1] = i
        if aP[aEstado_actual] == "E":
            aux = []
            for i in range(nS):
                if P3[aEstado_actual][i] != 0.0:
                    for j in range(int(P3[aEstado_actual][i]*100)): aux.append(i)
            nuevo_estado = random.choice(aux)
            for i in range(len(aSTATE)):
                if nuevo_estado in aSTATE[i]:
                    aPos_R[0] = int(aSTATE[i].index(nuevo_estado))
                    aPos_R[1] = i
        if aP[aEstado_actual] == "O":
            aux = []
            for i in range(nS):
                if P4[aEstado_actual][i] != 0.0:
                    for j in range(int(P4[aEstado_actual][i]*100)): aux.append(i)
            nuevo_estado = random.choice(aux)
            for i in range(len(aSTATE)):
                if nuevo_estado in aSTATE[i]:
                    aPos_R[0] = int(aSTATE[i].index(nuevo_estado))
                    aPos_R[1] = i
        t_inicio = time.time()
    
    if lr:
        scr.blit(img4,(64 * aPos_R[0], 64 * aPos_R[1])) # Pinta Cursor.-

    if aPos_R[0] == aMETA[0] and aPos_R[1] == aMETA[1]:
        lr = False
    return

#---------------------------------------------------------------------
#  MAIN.-
#---------------------------------------------------------------------
pygame.init()
scr  = pygame.display.set_mode((256,384)) 


img1 = Load_Image('images/piso.png')
img2 = Load_Image('images/peligro.png')

img3 = Load_Image('images/meta.png')
img4 = Load_Image('images/robot.png',True)

img5 = Load_Image('images/norte.png',True) 
img6 = Load_Image('images/sur.png',True)   
img7 = Load_Image('images/este.png',True) 
img8 = Load_Image('images/oeste.png',True)

while not lGo:
    cKey = pygame.key.get_pressed()
    Pinta_aMAPA()
    Pinta_Poli()
    Pinta_INI_META()
    Pinta_Robot(lr,aPos_R,aP)
    pygame.display.flip()

    for e in pygame.event.get():

        if e.type == pygame.QUIT:
            lGo = True

        if e.type == pygame.MOUSEMOTION:
            nX_M,nY_M = e.pos          
       
        if cKey[pygame.K_v]:
            #Set_Reward(aSTATE[aMETA[1]][aMETA[0]])
            qValue()   
            lp =  lp ^ True
            print ("\nRecompensas =")
            print (Rw)
            print ("\nMejor Politica= ")
            print (aP)
            t_inicio = time.time()
            lr = True